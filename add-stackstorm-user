#!/bin/bash

# Add normal $user with specified $uid and (ssh) $key.
#
# NOTE: This script will return a non-zero status on failure.

set -e

fail() {
  echo "FAILED!"
  exit 2
}

trap 'fail' EXIT

if [ $# -ne 3 ]; then
  echo "Usage: $0 <user> <uid> <ssh-key>"
  echo ""
  echo "If executing using curl|bash, we recommend the following syntax:"
  echo "  curl -fsS <url> | bash -s <user> <uid> <ssh-key>"
  exit 1
fi

user=$1
uid=$2
key=$3

gid=$uid

# Add user, but only if it doesn't already exist
if ! grep -q $user /etc/passwd; then
  sudo addgroup --gid $uid $user
  sudo adduser --uid $uid --gid $gid --shell /bin/bash --disabled-password --gecos ',,,' $user
fi

sudo mkdir -p /home/$user/.ssh
sudo chmod 700 /home/$user/.ssh

# Update authorized_keys
keys=/home/$user/.ssh/authorized_keys
sudo touch $keys
if ! sudo grep -q "$key" $keys; then
  sudo /bin/bash -c "echo $key >> $keys"
fi
sudo chmod 600 $keys
sudo chown -R $user:$user /home/$user/.ssh

# Add entry to /etc/sudoers.d/admins
sudoersd='/etc/sudoers.d'
if [ ! -d $sudoersd ]; then
  sudo mkdir -p $sudoersd
fi

admins="$sudoersd/admins"
if ! sudo grep -q $user $admins; then
  sudo bash -c "echo '$user       ALL=(ALL)      NOPASSWD: ALL' >> $admins"
fi

trap - EXIT

exit 0
